/*
	DESCRIÇÃO: SCRIPT PARA CRIAÇÃO DO BANCO DE DADOS NO SGBD MYSQL PARA O SISTEMA DA FASICLIN
    AUTOR: PAULO MENDONÇA
    CURSO: ANÁLISE E DESENVOLVIMENTO DE SISTEMAS
    MATÉRIA: PROJETO INTERDISCIPLINAR
    PROFESSOR: JOÃO F. BORBA
    
    OBSERVAÇÕES IMPORTANTES: ESTE SCRIPT É REFERENTE À CRIAÇÃO DE TABELAS,
							 CHAVES ESTRANGEIRAS, INDICES E ALGUMAS PROCEDURES.
                             FIQUE ATENTO AOS COMENTÁRIOS NA SESSÃO DE PROCEDURES.
*/


/*
-- TABLESPACES --

CREATE TABLESPACE TS_AGENDA
	ADD DATAFILE '/var/lib/mysql/TS_AGENDA.ibd'
    ENGINE=InnoDB;

CREATE TABLESPACE TS_PRONTUARIO
	ADD DATAFILE '/var/lib/mysql/TS_PRONTUARIO.ibd'
    ENGINE=InnoDB;
    
CREATE TABLESPACE TS_RH
	ADD DATAFILE '/var/lib/mysql/TS_RH.ibd'
    ENGINE=InnoDB;
    
CREATE TABLESPACE TS_VENDA
	ADD DATAFILE '/var/lib/mysql/TS_VENDA.ibd'
    ENGINE=InnoDB;
    
CREATE TABLESPACE TS_CONTABIL
	ADD DATAFILE '/var/lib/mysql/TS_CONTABIL.ibd'
    ENGINE=InnoDB;
    
CREATE TABLESPACE TS_COMPRA
	ADD DATAFILE '/var/lib/mysql/TS_COMPRA.ibd'
    ENGINE=InnoDB;
    
CREATE TABLESPACE TS_ESTETCOSME
	ADD DATAFILE '/var/lib/mysql/TS_ESTETCOSME.ibd'
    ENGINE=InnoDB;
    
CREATE TABLESPACE TS_ENFERMAGEM
	ADD DATAFILE '/var/lib/mysql/TS_ENFERMAGEM.ibd'
    ENGINE=InnoDB;
    
CREATE TABLESPACE TS_NUTRICAO
	ADD DATAFILE '/var/lib/mysql/TS_NUTRICAO.ibd'
    ENGINE=InnoDB;
    
CREATE TABLESPACE TS_BIOMEDICINA
	ADD DATAFILE '/var/lib/mysql/TS_BIOMEDICINA.ibd'
    ENGINE=InnoDB;
    
CREATE TABLESPACE TS_ODONTOLOGIA
	ADD DATAFILE '/var/lib/mysql/TS_ODONDOLOGIA.ibd'
    ENGINE=InnoDB;
-- */

-- BANCO --

DROP DATABASE IF EXISTS fasiclin;
CREATE DATABASE fasiclin;
USE fasiclin;

-- TABELAS --

CREATE TABLE PESSOA(
	IDPESSOA INT PRIMARY KEY AUTO_INCREMENT,
    TIPOPESSOA ENUM('F','J') NOT NULL
)
TABLESPACE TS_AGENDA
STORAGE DISK;

CREATE TABLE PESSOAFIS(
	IDPESSOAFIS INT PRIMARY KEY AUTO_INCREMENT,
    ID_PESSOA INT NOT NULL UNIQUE,
    CPFPESSOA CHAR(11) NOT NULL UNIQUE,
    NOMEPESSOA VARCHAR(100) NOT NULL,
    DATANASCPES DATE NOT NULL,
    SEXOPESSOA ENUM('M','F') NOT NULL,
    DATACRIACAO DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
)
TABLESPACE TS_AGENDA
STORAGE DISK;

CREATE TABLE PESSOAJUR(
	IDPESSOAJUR INT PRIMARY KEY AUTO_INCREMENT,
    ID_PESSOA INT NOT NULL UNIQUE,
	CNPJ CHAR(14) NOT NULL UNIQUE,
	RAZSOCIAL VARCHAR(100) NOT NULL,
	NOMEFAN VARCHAR(100) NOT NULL,
	CNAE CHAR(7),
	DATACRIACAO DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
)
TABLESPACE TS_AGENDA
STORAGE DISK;

CREATE TABLE ENDERECO(
	IDENDERECO INT PRIMARY KEY AUTO_INCREMENT,
	TIPOENDER ENUM('COM', 'RES') NOT NULL,
	ID_TIPOLOGRA INT NOT NULL,
	LOGRADOURO VARCHAR(100) NOT NULL,
	NUMEENDER VARCHAR(10) NOT NULL,
	COMPLEMENTO VARCHAR(100),
	BAIRRO VARCHAR(100) NOT NULL,
    CEP CHAR(8) NOT NULL,
	ID_CIDADE INT NOT NULL,
	ID_PESSOA INT NOT NULL
)
TABLESPACE TS_AGENDA
STORAGE DISK;

CREATE TABLE CONTATO(
	IDCONTATO INT PRIMARY KEY AUTO_INCREMENT,
	ID_TIPOCONTATO INT NOT NULL,
	NUMERO VARCHAR(12),
	ID_PESSOA INT NOT NULL
)
TABLESPACE TS_AGENDA
STORAGE DISK;

CREATE TABLE EMAIL(
	IDEMAIL INT PRIMARY KEY AUTO_INCREMENT,
	EMAIL VARCHAR(100) NOT NULL,
	ID_PESSOA INT NOT NULL
)
TABLESPACE TS_AGENDA
STORAGE DISK;

CREATE TABLE TIPOLOGRADO(
	IDTIPOLOGRA INT PRIMARY KEY AUTO_INCREMENT,
	TIPO VARCHAR(20) NOT NULL UNIQUE
)
TABLESPACE TS_AGENDA
STORAGE DISK;

CREATE TABLE CIDADE(
	IDCIDADE INT PRIMARY KEY AUTO_INCREMENT,
	CIDADE VARCHAR(100) NOT NULL,
	ESTADO CHAR(2) NOT NULL
)
TABLESPACE TS_AGENDA
STORAGE DISK;

CREATE TABLE TIPOCONTATO(
	IDTIPOCONTATO INT PRIMARY KEY AUTO_INCREMENT,
	TIPO VARCHAR(20) NOT NULL UNIQUE
)
TABLESPACE TS_AGENDA
STORAGE DISK;

CREATE TABLE AGENDA(
	IDAGENDA INT PRIMARY KEY AUTO_INCREMENT,
	ID_PESSOAFIS INT NOT NULL,
	ID_PROFISSIO INT NOT NULL,
	ID_PROCED INT NOT NULL,
	DATAABERT DATE NOT NULL
)
TABLESPACE TS_AGENDA
STORAGE DISK;

CREATE TABLE PACIENTE(
	IDPACIENTE INT PRIMARY KEY AUTO_INCREMENT,
	ID_PESSOAFIS INT NOT NULL UNIQUE,
	RGPACIENTE VARCHAR(15) NOT NULL UNIQUE,
	ESTDORGPAC ENUM('AC', 'AL', 'AP', 'AM', 'BA', 'CE', 'DF', 'ES', 'GO', 'MA',
					'MT', 'MS', 'MG', 'PA', 'PB', 'PR', 'PE', 'PI', 'RJ', 'RN',
					'RS', 'RO', 'RR', 'SC', 'SP', 'SE', 'TO'),
	STATUSPAC BOOLEAN NOT NULL
)
TABLESPACE TS_AGENDA
STORAGE DISK;

CREATE TABLE PRONTUARIO(
	IDPRONTU INT PRIMARY KEY AUTO_INCREMENT,
	ID_PACIENTE INT NOT NULL,
	ID_PROFISSIO INT NOT NULL,
	ID_ESPEC INT NOT NULL,
	ID_PROCED INT NOT NULL,
	DATAPROCED DATE NOT NULL,
	DESCRPRONTU TEXT NOT NULL,
	LINKPROCED VARCHAR(250),
	AUTOPACVISU BOOLEAN NOT NULL
)
TABLESPACE TS_PRONTUARIO
STORAGE DISK;

CREATE TABLE PROCEDIMENTO(
	IDPROCED INT PRIMARY KEY AUTO_INCREMENT,
	CODPROCED CHAR(8) NOT NULL UNIQUE,
	DESCRPROC VARCHAR(250) NOT NULL,
	VALORPROC DECIMAL(10,2) NOT NULL
)
TABLESPACE TS_PRONTUARIO
STORAGE DISK;

CREATE TABLE PROFISSIONAL(
	IDPROFISSIO INT PRIMARY KEY AUTO_INCREMENT,
	ID_PESSOAFIS INT NOT NULL UNIQUE,
	TIPOPROFI ENUM('1','2','3','4') NOT NULL,
	ID_SUPPROFI INT,
	STATUSPROFI ENUM('1','2','3'),
	ID_CONSEPROFI INT NOT NULL
)
TABLESPACE TS_RH
STORAGE DISK;

CREATE TABLE CONSEPROFI(
	IDCONSEPROFI INT PRIMARY KEY AUTO_INCREMENT,
	DESCRICAO VARCHAR(100) NOT NULL UNIQUE,
	ABREVCONS CHAR(10) NOT NULL UNIQUE
)
TABLESPACE TS_RH
STORAGE DISK;

CREATE TABLE PROFI_ESPEC(
	IDPROFI_ESPEC INT PRIMARY KEY AUTO_INCREMENT,
	ID_PROFISSIO INT NOT NULL,
	ID_ESPEC INT NOT NULL
)
TABLESPACE TS_RH
STORAGE DISK;

CREATE TABLE USUARIO(
	IDUSUARIO INT PRIMARY KEY AUTO_INCREMENT,
	ID_PROFISSIO INT NOT NULL UNIQUE,
	LOGUSUARIO VARCHAR(100) NOT NULL UNIQUE,
	SENHAUSUA VARCHAR(250) NOT NULL
)
TABLESPACE TS_RH
STORAGE DISK;

CREATE TABLE ESPECIALIDADE(
	IDESPEC INT PRIMARY KEY AUTO_INCREMENT,
	CODESPEC CHAR(2) NOT NULL UNIQUE,
	DESCESPEC VARCHAR(100)
)
TABLESPACE TS_PRONTUARIO
STORAGE DISK;

CREATE TABLE VENDA(
	IDVENDA INT PRIMARY KEY AUTO_INCREMENT,
	ID_PESSOA INT NOT NULL,
	VALORVENDA DECIMAL(10,2) NOT NULL,
	DATAPAG DATE NOT NULL,
	FORMPAG ENUM('1','2') NOT NULL
)
TABLESPACE TS_VENDA
STORAGE DISK;

CREATE TABLE ITEMVENDA(
	IDITEMVENDA INT PRIMARY KEY AUTO_INCREMENT,
	ID_VENDA INT NOT NULL,
	QTDITEM INT NOT NULL,
	ID_ESPEC INT NOT NULL,
	ID_PRECED INT NOT NULL,
	ID_PROFISSIO INT NOT NULL
)
TABLESPACE TS_VENDA
STORAGE DISK;

CREATE TABLE PLANOCONTA(
	IDPLANOCONTA INT PRIMARY KEY AUTO_INCREMENT,
	CODPLANO INT NOT NULL,
	TIPO ENUM('AT','PA','PL','RC','DP') NOT NULL,
	DESCRICAO VARCHAR(250)
)
TABLESPACE TS_CONTABIL
STORAGE DISK;

CREATE TABLE MOVCONTABIL(
	IDMOVCONTAB INT PRIMARY KEY AUTO_INCREMENT,
	NUMELANCAM INT NOT NULL UNIQUE,
	DATALANCAME DATE,
	ID_ORDCOMP INT,
	ID_ITEMVENDA INT,
	ID_PLANOCONTA INT NOT NULL,
	VALDBTO DECIMAL(10,2) NOT NULL,
	VALCDTO DECIMAL(10,2) NOT NULL
)
TABLESPACE TS_CONTABIL
STORAGE DISK;

CREATE TABLE INSCRIFISCAL(
	IDINSCRIFI INT PRIMARY KEY AUTO_INCREMENT,
	NUMESCFISC INT NOT NULL,
	DATAINSCRI DATE NOT NULL,
	ID_MOVCONTAB INT NOT NULL,
	VALOR DECIMAL(10,2)
)
TABLESPACE TS_CONTABIL
STORAGE DISK;

CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(50) NOT NULL,
	DESCRICAO VARCHAR(250) NOT NULL,
	ID_UNMEDI INT NOT NULL,
	STQMAX INT NOT NULL,
	STQMIN INT NOT NULL,
	PNTPEDIDO INT NOT NULL
)
TABLESPACE TS_COMPRA
STORAGE DISK;

CREATE TABLE UNIMEDIDA(
	IDUNMEDI INT PRIMARY KEY AUTO_INCREMENT,
	DESCRICAO VARCHAR(50) NOT NULL,
	UNIABREV CHAR(3) NOT NULL UNIQUE
)
TABLESPACE TS_COMPRA
STORAGE DISK;

CREATE TABLE FORNECEDOR(
	IDFORNECEDOR INT PRIMARY KEY AUTO_INCREMENT,
	ID_PESSOA INT NOT NULL UNIQUE,
	REPRESENT VARCHAR(100)
)
TABLESPACE TS_COMPRA
STORAGE DISK;

CREATE TABLE ORDEMCOMPRA(
	IDORDCOMP INT PRIMARY KEY AUTO_INCREMENT,
	ID_FORNECEDOR INT NOT NULL,
	STATUSORD ENUM('PEND', 'ANDA', 'CONC') NOT NULL,
	VALOR DECIMAL(10,2) NOT NULL,
	DATAPREV DATE NOT NULL,
	DATAORDEM DATE NOT NULL,
	DATAENTRE DATE NOT NULL
)
TABLESPACE TS_COMPRA
STORAGE DISK;

CREATE TABLE ITEM_ORDCOMP(
	IDITEMORD INT PRIMARY KEY AUTO_INCREMENT,
	ID_ORDCOMP INT NOT NULL,
	ID_PRODUTO INT NOT NULL,
	QNTD INT NOT NULL,
	VALOR DECIMAL(10,2) NOT NULL,
	DATAVENC DATE NOT NULL
)
TABLESPACE TS_COMPRA
STORAGE DISK;

CREATE TABLE LOTE(
	IDLOTE INT PRIMARY KEY AUTO_INCREMENT,
	ID_ORDCOMP INT NOT NULL,
	ID_SETOR INT NOT NULL,
	QNTD INT NOT NULL
)
TABLESPACE TS_COMPRA
STORAGE DISK;

CREATE TABLE SETOR(
	IDSETOR INT PRIMARY KEY AUTO_INCREMENT,
	ID_PROFISSIO INT NOT NULL,
	NOMESETOR VARCHAR(50) NOT NULL UNIQUE
)
TABLESPACE TS_COMPRA
STORAGE DISK;

CREATE TABLE REGSOLIC(
	IDREGSOLIC INT PRIMARY KEY AUTO_INCREMENT,
	ID_PROFISSIO INT NOT NULL,
	DATASOLIC DATE NOT NULL,
	ID_SETOR INT NOT NULL
)
TABLESPACE TS_COMPRA
STORAGE DISK;

CREATE TABLE ITEMSOLIC(
	IDITEMSOLC INT PRIMARY KEY AUTO_INCREMENT,
	ID_REGSOLIC INT NOT NULL,
	ID_PRODUTO INT NOT NULL,
	QNTD INT NOT NULL
)
TABLESPACE TS_COMPRA
STORAGE DISK;

CREATE TABLE EQUIPAMENTO(
	IDEQUIPA INT PRIMARY KEY AUTO_INCREMENT,
	NOMEQUIPA VARCHAR(50) NOT NULL UNIQUE,
	ID_SETOR INT NOT NULL
)
TABLESPACE TS_ESTETCOSME
STORAGE DISK;

CREATE TABLE MANUTEQUIPA(
	IDMANUTEQUIPA INT PRIMARY KEY AUTO_INCREMENT,
	ID_EQUIPA INT NOT NULL,
	ID_PESSOAJUR INT NOT NULL,
	NOMETEC VARCHAR(100),
	CUSTOMANUT DECIMAL(10,2),
	STATUSMANU ENUM('1','2','3')
)
TABLESPACE TS_ESTETCOSME
STORAGE DISK;

CREATE TABLE ANAMNESE(
	IDANAMNESE INT PRIMARY KEY AUTO_INCREMENT,
	ID_PACIENTE INT NOT NULL,
	ID_PROFISSIO INT NOT NULL,
	DATAANAM DATETIME NOT NULL,
	AUTVISIB BOOLEAN NOT NULL,
	STATUSANM ENUM('APROVADO','REPROVADO','CANCELADO') NOT NULL,
	STATUSFUNC BOOLEAN NOT NULL,
	OBSERVACOES TEXT
)
TABLESPACE TS_ENFERMAGEM
STORAGE DISK;

CREATE TABLE PERGUNTA(
	IDPERGUNTA INT PRIMARY KEY AUTO_INCREMENT,
	PERGUNTA TEXT NOT NULL,
	TIPO ENUM('O','S','A') NOT NULL,
	MODULO ENUM('ENF', 'FIS', 'ODO') NOT NULL
)
TABLESPACE TS_ENFERMAGEM
STORAGE DISK;

CREATE TABLE RESPOSTA(
	IDRESPOSTA INT PRIMARY KEY AUTO_INCREMENT,
	ID_PERGUNTA INT NOT NULL,
	ID_ANAMNESE INT NOT NULL,
	RESPSUBJET TEXT,
	RESPOBJET BOOLEAN
)
TABLESPACE TS_ENFERMAGEM
STORAGE DISK;

CREATE TABLE AVALNUTRI(
	IDAVALNUTRI INT PRIMARY KEY AUTO_INCREMENT,
	ID_PACIENTE INT NOT NULL,
	ID_PROFISSIO INT NOT NULL,
	ID_PROCED INT NOT NULL,
	DATAAVAL DATE NOT NULL,
	HISTOCLIN TEXT NOT NULL,
	ID_RESULEXAME INT NOT NULL,
	AVALANTRO TEXT NOT NULL,
	CIRCUNCEF DECIMAL(10,2) NOT NULL,
	CIRCUNBRA DECIMAL(10,2) NOT NULL,
	CIRCUNPUN DECIMAL(10,2) NOT NULL,
	CIRCUNCIN DECIMAL(10,2) NOT NULL,
	CIRCUNQUA DECIMAL(10,2) NOT NULL,
	CIRCUNPAN DECIMAL(10,2) NOT NULL,
	CIRCUNDOBCUT DECIMAL(10,2) NOT NULL,
	CIRCUNDOBCUTSE DECIMAL(10,2) NOT NULL,
	CIRCUNDOBCUTBI DECIMAL(10,2) NOT NULL,
	CIRCUNDOBCUTAB DECIMAL(10,2) NOT NULL,
	CIRCUNDOBCUTSUP DECIMAL(10,2) NOT NULL,
	CIRCUNDOBCUTPAN DECIMAL(10,2) NOT NULL,
	CIRCUNDOBCUTCOX DECIMAL(10,2) NOT NULL,
	PLANALIMENT DECIMAL(10,2) NOT NULL
)
TABLESPACE TS_NUTRICAO
STORAGE DISK;

CREATE TABLE EVOLNUTRI(
	IDEVOLNUTRI INT PRIMARY KEY AUTO_INCREMENT,
	ID_PACIENTE INT NOT NULL,
	MOTIVACAO VARCHAR(250) NOT NULL,
	HISTODOENCA TEXT NOT NULL,
	DIAGCLIN TEXT NOT NULL,
	EXAMFIS TEXT NOT NULL,
	SINTGASTRO TEXT NOT NULL
)
TABLESPACE TS_NUTRICAO
STORAGE DISK;

CREATE TABLE METODEXAME(
	IDMETODEXAME INT PRIMARY KEY AUTO_INCREMENT,
	NOMEMETOD VARCHAR(100) NOT NULL UNIQUE,
	DESCRICAO TEXT NOT NULL,
	ID_PROCED INT NOT NULL
)
TABLESPACE TS_BIOMEDICINA
STORAGE DISK;

CREATE TABLE RESULEXAME(
	IDRESULEXAME INT PRIMARY KEY AUTO_INCREMENT,
	ID_AGENDA INT NOT NULL,
	DATACOLE DATE NOT NULL,
	RESULTADO VARCHAR(250),
	OBSERVACAO TEXT,
	STATUSEXA ENUM('PEND','ANDA','CONC','CANC') NOT NULL
)
TABLESPACE TS_BIOMEDICINA
STORAGE DISK;

CREATE TABLE ATENDIODONTO(
	IDATENDIODONTO INT PRIMARY KEY AUTO_INCREMENT,
	ID_PACIENTE INT NOT NULL,
	ID_PROFISSIO INT NOT NULL,
	ID_PROCED INT NOT NULL,
	DATAHORA DATETIME NOT NULL,
	MOTCONSUL VARCHAR(250) NOT NULL,
	DESCPROCED VARCHAR(250) NOT NULL,
	OBSERVACOES VARCHAR(250) NOT NULL
)
TABLESPACE TS_ODONTOLOGIA
STORAGE DISK;

CREATE TABLE SOLIODONTO(
	IDSOLIODONTO INT PRIMARY KEY AUTO_INCREMENT,
	ID_PACIENTE INT NOT NULL,
	ID_PROFISSIO INT,
	ID_PROCED INT NOT NULL,
	ID_USUARIO INT NOT NULL,
	DATASOL DATETIME NOT NULL,
	DESCRICAO TEXT NOT NULL,
	STATUSSOLI ENUM('P', 'A', 'N') NOT NULL
)
TABLESPACE TS_ODONTOLOGIA
STORAGE DISK;


-- CHAVES ESTRANGEIRAS --

ALTER TABLE PESSOAFIS
	ADD CONSTRAINT FK_PESSOAFIS_PESSOA
    FOREIGN KEY(ID_PESSOA)
    REFERENCES PESSOA(IDPESSOA);
    
ALTER TABLE PESSOAJUR
	ADD CONSTRAINT FK_PESSOAJUR_PESSOA
    FOREIGN KEY(ID_PESSOA)
    REFERENCES PESSOA(IDPESSOA);
    
ALTER TABLE ENDERECO
	ADD CONSTRAINT FK_ENDERECO_TIPOLOGRADO
    FOREIGN KEY(ID_TIPOLOGRA)
    REFERENCES TIPOLOGRADO(IDTIPOLOGRA);
    
ALTER TABLE ENDERECO
	ADD CONSTRAINT FK_ENDERECO_CIDADE
    FOREIGN KEY(ID_CIDADE)
    REFERENCES CIDADE(IDCIDADE);
    
ALTER TABLE ENDERECO
	ADD CONSTRAINT FK_ENDERECO_PESSOA
    FOREIGN KEY(ID_PESSOA)
    REFERENCES PESSOA(IDPESSOA);
    
ALTER TABLE CONTATO
	ADD CONSTRAINT FK_CONTATO_TIPOCONTATO
    FOREIGN KEY(ID_TIPOCONTATO)
    REFERENCES TIPOCONTATO(IDTIPOCONTATO);
    
ALTER TABLE EMAIL
	ADD CONSTRAINT FK_EMAIL_PESSOA
    FOREIGN KEY(ID_PESSOA)
    REFERENCES PESSOA(IDPESSOA);
    
ALTER TABLE CONTATO
	ADD CONSTRAINT FK_CONTATO_PESSOA
    FOREIGN KEY(ID_PESSOA)
    REFERENCES PESSOA(IDPESSOA);
    
ALTER TABLE AGENDA
	ADD CONSTRAINT FK_AGENDA_PESSOAFIS
    FOREIGN KEY(ID_PESSOAFIS)
    REFERENCES PESSOAFIS(IDPESSOAFIS);
    
ALTER TABLE AGENDA
	ADD CONSTRAINT FK_AGENDA_PROFISSIONAL
    FOREIGN KEY(ID_PROFISSIO)
    REFERENCES PROFISSIONAL(IDPROFISSIO);

ALTER TABLE AGENDA
	ADD CONSTRAINT FK_AGENDA_PROCEDIMENTO
    FOREIGN KEY(ID_PROCED)
    REFERENCES PROCEDIMENTO(IDPROCED);
    
ALTER TABLE PACIENTE
	ADD CONSTRAINT FK_PACIENTE_PESSOAFIS
    FOREIGN KEY(ID_PESSOAFIS)
    REFERENCES PESSOAFIS(IDPESSOAFIS);

ALTER TABLE PRONTUARIO
	ADD CONSTRAINT FK_PRONTUARIO_PACIENTE
    FOREIGN KEY(ID_PACIENTE)
    REFERENCES PACIENTE(IDPACIENTE);
    
ALTER TABLE PRONTUARIO
	ADD CONSTRAINT FK_PRONTUARIO_PROFISSIONAL
    FOREIGN KEY(ID_PROFISSIO)
    REFERENCES PROFISSIONAL(IDPROFISSIO);

ALTER TABLE PRONTUARIO
	ADD CONSTRAINT FK_PRONTUARIO_ESPECIALIDADE
    FOREIGN KEY(ID_ESPEC)
    REFERENCES ESPECIALIDADE(IDESPEC);
    
ALTER TABLE PRONTUARIO
	ADD CONSTRAINT FK_PRONTUARIO_PROCEDIMENTO
    FOREIGN KEY(ID_PROCED)
    REFERENCES PROCEDIMENTO(IDPROCED);
    
ALTER TABLE PROFISSIONAL
	ADD CONSTRAINT FK_PROFISSIONAL_PESSOAFIS
    FOREIGN KEY(ID_PESSOAFIS)
    REFERENCES PESSOAFIS(IDPESSOAFIS);

ALTER TABLE PROFISSIONAL
	ADD CONSTRAINT FK_PROFISSIONAL_PROFISSIONAL
    FOREIGN KEY(ID_SUPPROFI)
    REFERENCES PROFISSIONAL(IDPROFISSIO);
    
ALTER TABLE PROFISSIONAL
	ADD CONSTRAINT FK_PROFISSIONAL_CONSEPROFI
    FOREIGN KEY(ID_CONSEPROFI)
    REFERENCES CONSEPROFI(IDCONSEPROFI);
    
ALTER TABLE PROFI_ESPEC
	ADD CONSTRAINT FK_PROFIESPEC_PROFISSIONAL
    FOREIGN KEY(ID_PROFISSIO)
    REFERENCES PROFISSIONAL(IDPROFISSIO);

ALTER TABLE PROFI_ESPEC
	ADD CONSTRAINT FK_PROFIESPEC_ESPECIALIDADE
    FOREIGN KEY(ID_ESPEC)
    REFERENCES ESPECIALIDADE(IDESPEC);

ALTER TABLE USUARIO
	ADD CONSTRAINT FK_USUARIO_PROFISSIONAL
    FOREIGN KEY(ID_PROFISSIO)
    REFERENCES PROFISSIONAL(IDPROFISSIO);
    
ALTER TABLE VENDA
	ADD CONSTRAINT FK_VENDA_PESSOA
    FOREIGN KEY(ID_PESSOA)
    REFERENCES PESSOA(IDPESSOA);
    
ALTER TABLE ITEMVENDA
	ADD CONSTRAINT FK_ITEMVENDA_VENDA
    FOREIGN KEY(ID_VENDA)
    REFERENCES VENDA(IDVENDA);

ALTER TABLE ITEMVENDA
	ADD CONSTRAINT FK_ITEMVENDA_ESPECIALIDADE
    FOREIGN KEY(ID_ESPEC)
    REFERENCES ESPECIALIDADE(IDESPEC);

ALTER TABLE ITEMVENDA
	ADD CONSTRAINT FK_ITEMVENDA_PROCEDIMENTO
    FOREIGN KEY(ID_PRECED)
    REFERENCES PROCEDIMENTO(IDPROCED);
    
ALTER TABLE ITEMVENDA
	ADD CONSTRAINT FK_ITEMVENDA_PROFISSIONAL
    FOREIGN KEY(ID_PROFISSIO)
    REFERENCES PROFISSIONAL(IDPROFISSIO);
    
ALTER TABLE MOVCONTABIL
	ADD CONSTRAINT FK_MOVCONTABIL_ORDEMCOMPRA
    FOREIGN KEY(ID_ORDCOMP)
    REFERENCES ORDEMCOMPRA(IDORDCOMP);
    
ALTER TABLE MOVCONTABIL
	ADD CONSTRAINT FK_MOVCONTABIL_ITEMVENDA
    FOREIGN KEY(ID_ITEMVENDA)
    REFERENCES ITEMVENDA(IDITEMVENDA);
    
ALTER TABLE MOVCONTABIL
	ADD CONSTRAINT FK_MOVCONTABIL_PLANOCONTA
    FOREIGN KEY(ID_PLANOCONTA)
    REFERENCES PLANOCONTA(IDPLANOCONTA);
    
ALTER TABLE INSCRIFISCAL
	ADD CONSTRAINT FK_CONTABIL_MOVCONTABIL
    FOREIGN KEY(ID_MOVCONTAB)
    REFERENCES MOVCONTABIL(IDMOVCONTAB);
    
ALTER TABLE PRODUTO
	ADD CONSTRAINT FK_PRODUTO_UNIMEDIDA
    FOREIGN KEY(ID_UNMEDI)
    REFERENCES UNIMEDIDA(IDUNMEDI);
    
ALTER TABLE FORNECEDOR
	ADD CONSTRAINT FK_FORNECEDOR_PESSOA
    FOREIGN KEY(ID_PESSOA)
    REFERENCES PESSOA(IDPESSOA);
    
ALTER TABLE ORDEMCOMPRA
	ADD CONSTRAINT FK_ORDEMCOMPRA_FORNECEDOR
    FOREIGN KEY(ID_FORNECEDOR)
    REFERENCES FORNECEDOR(IDFORNECEDOR);
    
ALTER TABLE ITEM_ORDCOMP
	ADD CONSTRAINT FK_ITEMORDCOMP_ORDEMCOMPRA
    FOREIGN KEY(ID_ORDCOMP)
    REFERENCES ORDEMCOMPRA(IDORDCOMP);

ALTER TABLE ITEM_ORDCOMP
	ADD CONSTRAINT FK_ITEMORDCOMP_PRODUTO
    FOREIGN KEY(ID_PRODUTO)
    REFERENCES PRODUTO(IDPRODUTO);
    
ALTER TABLE LOTE
	ADD CONSTRAINT FK_LOTE_ORDEMCOMPRA
    FOREIGN KEY(ID_ORDCOMP)
    REFERENCES ORDEMCOMPRA(IDORDCOMP);
    
ALTER TABLE SETOR
	ADD CONSTRAINT FK_SETOR_PROFISSIONAL
    FOREIGN KEY(ID_PROFISSIO)
    REFERENCES PROFISSIONAL(IDPROFISSIO);
    
ALTER TABLE REGSOLIC
	ADD CONSTRAINT FK_REGSOLIC_PROFISSIONAL
    FOREIGN KEY(ID_PROFISSIO)
    REFERENCES PROFISSIONAL(IDPROFISSIO);
    
ALTER TABLE REGSOLIC
	ADD CONSTRAINT FK_REGSOLIC_SETOR
    FOREIGN KEY(ID_SETOR)
    REFERENCES SETOR(IDSETOR);
    
ALTER TABLE ITEMSOLIC
	ADD CONSTRAINT FK_ITEMSOLIC_PRODUTO
    FOREIGN KEY(ID_PRODUTO)
    REFERENCES PRODUTO(IDPRODUTO);
    
ALTER TABLE EQUIPAMENTO
	ADD CONSTRAINT FK_EQUIPAMENTO_SETOR
    FOREIGN KEY(ID_SETOR)
    REFERENCES SETOR(IDSETOR);
    
ALTER TABLE MANUTEQUIPA
	ADD CONSTRAINT FK_MANUTEQUIPA_PESSOAJUR
    FOREIGN KEY(ID_PESSOAJUR)
    REFERENCES PESSOAJUR(IDPESSOAJUR);
    
ALTER TABLE ANAMNESE
	ADD CONSTRAINT FK_ANAMNESE_PACIENTE
    FOREIGN KEY(ID_PACIENTE)
    REFERENCES PACIENTE(IDPACIENTE);
    
ALTER TABLE ANAMNESE
	ADD CONSTRAINT FK_ANAMNESE_PROFISSIONAL
    FOREIGN KEY(ID_PROFISSIO)
    REFERENCES PROFISSIONAL(IDPROFISSIO);
    
ALTER TABLE RESPOSTA
	ADD CONSTRAINT FK_RESPOSTA_PERGUNTA
    FOREIGN KEY(ID_PERGUNTA)
    REFERENCES PERGUNTA(IDPERGUNTA);
    
ALTER TABLE RESPOSTA
	ADD CONSTRAINT FK_RESPOSTA_ANAMNESE
    FOREIGN KEY(ID_ANAMNESE)
    REFERENCES ANAMNESE(IDANAMNESE);
    
ALTER TABLE AVALNUTRI
	ADD CONSTRAINT FK_AVALNUTRI_PACIENTE
    FOREIGN KEY(ID_PACIENTE)
    REFERENCES PACIENTE(IDPACIENTE);
    
ALTER TABLE AVALNUTRI
	ADD CONSTRAINT FK_AVALNUTRI_PROFISSIONAL
    FOREIGN KEY(ID_PROFISSIO)
    REFERENCES PROFISSIONAL(IDPROFISSIO);
    
ALTER TABLE AVALNUTRI
	ADD CONSTRAINT FK_AVALNUTRI_PROCEDIMENTO
    FOREIGN KEY(ID_PROCED)
    REFERENCES PROCEDIMENTO(IDPROCED);
    
ALTER TABLE AVALNUTRI
	ADD CONSTRAINT FK_AVALNUTRI_RESULEXAME
    FOREIGN KEY(ID_RESULEXAME)
    REFERENCES RESULEXAME(IDRESULEXAME);
    
ALTER TABLE EVOLNUTRI
	ADD CONSTRAINT FK_EVOLNUTRI_PACIENTE
    FOREIGN KEY(ID_PACIENTE)
    REFERENCES PACIENTE(IDPACIENTE);
    
ALTER TABLE METODEXAME
	ADD CONSTRAINT FK_METODEXAME_PROCEDIMENTO
    FOREIGN KEY(ID_PROCED)
    REFERENCES PROCEDIMENTO(IDPROCED);
    
ALTER TABLE RESULEXAME
	ADD CONSTRAINT FK_RESULEXAME_AGENDA
    FOREIGN KEY(ID_AGENDA)
    REFERENCES AGENDA(IDAGENDA);
    
ALTER TABLE ATENDIODONTO
	ADD CONSTRAINT FK_ATENDIODONTO_PACIENTE
    FOREIGN KEY(ID_PACIENTE)
    REFERENCES PACIENTE(IDPACIENTE);
    
ALTER TABLE ATENDIODONTO
	ADD CONSTRAINT FK_ATENDIODONTO_PROFISSIONAL
    FOREIGN KEY(ID_PROFISSIO)
    REFERENCES PROFISSIONAL(IDPROFISSIO);
    
ALTER TABLE ATENDIODONTO
	ADD CONSTRAINT FK_ATENDIODONTO_PROCEDIMENTO
    FOREIGN KEY(ID_PROCED)
    REFERENCES PROCEDIMENTO(IDPROCED);
    
ALTER TABLE SOLIODONTO
	ADD CONSTRAINT FK_SOLIODONTO_PACIENTE
    FOREIGN KEY(ID_PACIENTE)
    REFERENCES PACIENTE(IDPACIENTE);
    
ALTER TABLE SOLIODONTO
	ADD CONSTRAINT FK_SOLIODONTO_PROFISSIONAL
    FOREIGN KEY(ID_PROFISSIO)
    REFERENCES PROFISSIONAL(IDPROFISSIO);
    
ALTER TABLE SOLIODONTO
	ADD CONSTRAINT FK_SOLIODONTO_PROCEDIMENTO
    FOREIGN KEY(ID_PROCED)
    REFERENCES PROCEDIMENTO(IDPROCED);

ALTER TABLE SOLIODONTO
	ADD CONSTRAINT FK_SOLIODONTO_USUARIO
    FOREIGN KEY(ID_USUARIO)
    REFERENCES USUARIO(IDUSUARIO);

-- INDICES --

CREATE INDEX IDX_PESSOAFIS_NOMEPESSOA ON PESSOAFIS(NOMEPESSOA);

CREATE INDEX IDX_PESSOAJUR_RAZSOCIAL ON PESSOAJUR(RAZSOCIAL);

CREATE INDEX IDX_PESSOAJUR_NOMEFAN ON PESSOAJUR(NOMEFAN);

CREATE INDEX IDX_EMAIL_EMAIL ON EMAIL(EMAIL);

CREATE INDEX IDX_CIDADE_CIDADE ON CIDADE(CIDADE);

CREATE INDEX IDX_PACIENTE_RGPACIENTE ON PACIENTE(RGPACIENTE);

CREATE INDEX IDX_PROCEDIMENTO_DESCRPROC ON PROCEDIMENTO(DESCRPROC);

CREATE INDEX IDX_PRODUTO_NOME ON PRODUTO(NOME);


-- PROCEDURES --
/*
!!!ATENÇÃO!!!
AS PROCEDURES SÃO APENAS PARA TESTES
E USO INTERNO NO BANCO DA DADOS.
NUNCA USE NENHUMA DELAS DENTRO DE SUA APLICAÇÃO
*/
/*
--- REGISTRAR PESSOA FÍSICA ---
EXEMPLO DE USO:
CALL SP_INSERT_PESSOAFIS(
	'José Mangolino',		--NOME COMPLETO
    '12345678901',			--CPF
    '2001-09-11',			--DATA DE NASCIMENTO
    'M'						--SEXO
    );
*/
DELIMITER $$

CREATE PROCEDURE SP_INSERT_PESSOAFIS(
	IN NOME VARCHAR(100),
    IN CPF CHAR(11),
    IN DATANASC DATE,
    IN SEXO ENUM('F','M')
    )
    BEGIN
    
    DECLARE VAR_ID_PESSOA INT;
    
		INSERT INTO PESSOA(TIPOPESSOA)
			VALUES('F');
		SET VAR_ID_PESSOA = LAST_INSERT_ID();
        INSERT INTO PESSOAFIS(ID_PESSOA,CPFPESSOA,NOMEPESSOA,DATANASCPES,SEXOPESSOA)
			VALUES(VAR_ID_PESSOA,CPF,NOME,DATANASC,SEXO);
	END$$

DELIMITER ;

/*
-- REGISTRAR PESSOA JURIDICA --
EXEMPLO DE USO:
CALL SP_INSERT_PESSOAJUR(
    '12345678000199',			--CNPJ
    'Fasipe LTDA',				--RAZAO SOCIAL
    'Faculdade Unifasipe',		--FANTASIA
    '6201500'					--CNAE (PODE SER NULL)
);
*/

DELIMITER $$

CREATE PROCEDURE SP_INSERT_PESSOAJUR(
	IN CNPJ_JUR CHAR(14),
    IN RAZAO VARCHAR(100),
    IN FANTA VARCHAR(100),
    IN CNAEJ CHAR(7)
    )
    BEGIN
    
    DECLARE VAR_ID_PESSOA INT;
    
		INSERT INTO PESSOA(TIPOPESSOA)
			VALUES('J');
            
		SET VAR_ID_PESSOA = LAST_INSERT_ID();
        
        INSERT INTO PESSOAJUR(ID_PESSOA,CNPJ,RAZSOCIAL,NOMEFAN,CNAE)
			VALUES(VAR_ID_PESSOA,CNPJ_JUR,RAZAO,FANTA,CNAEJ);
            
	END $$

DELIMITER ;


-- VIEWS --
/*
INFORMAÇÕES COMPLETAS SOBRE PESSOAS FISICAS
EXEPLO DE USO:
	SELECT 
		NOME,
		CPF,
		DATA_NASCIMENTO,
		SEXO,
		LOGRADOURO,
		NUMERO,
		BAIRRO,
		CEP,
		CIDADE,
		ESTADO,
		TIPO_ENDERECO,
		EMAIL, CONTATO,
		TIPO_CONTATO
	FROM VW_PESSOAFIS
	;
*/
CREATE VIEW VW_PESSOAFIS AS
	SELECT 
		F.NOMEPESSOA AS NOME,
        F.CPFPESSOA AS CPF,
        F.DATANASCPES AS DATA_NASCIMENTO,
        F.SEXOPESSOA AS SEXO,
        CONCAT(L.TIPO, ' ', E.LOGRADOURO) AS LOGRADOURO,
        E.NUMEENDER AS NUMERO,
        E.BAIRRO,
        E.CEP,
        C.CIDADE,
        C.ESTADO,
        CASE E.TIPOENDER
			WHEN 'RES' THEN 'RESIDENCIAL'
            WHEN 'COM' THEN 'COMERCIAL'
            ELSE 'TIPO NAO LISTADO'
		END AS TIPO_ENDERECO,
        EM.EMAIL,
        CT.NUMERO AS CONTATO,
        TC.TIPO AS TIPO_CONTATO
	FROM PESSOAFIS F
    INNER JOIN PESSOA P ON F.ID_PESSOA = P.IDPESSOA
    LEFT JOIN ENDERECO E ON P.IDPESSOA = E.ID_PESSOA
    INNER JOIN TIPOLOGRADO L ON E.ID_TIPOLOGRA = L.IDTIPOLOGRA
    INNER JOIN CIDADE C ON E.ID_CIDADE = C.IDCIDADE
    LEFT JOIN CONTATO CT ON P.IDPESSOA = CT.ID_PESSOA
    INNER JOIN TIPOCONTATO TC ON CT.ID_TIPOCONTATO = TC.IDTIPOCONTATO
    LEFT JOIN EMAIL EM ON P.IDPESSOA = EM.ID_PESSOA
;

